# jpa
## use create when running the app for the first time
## then change to "update" which just updates the schema when necessary
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.spatial.dialect.postgis.PostgisDialect
## this shows the sql actions in the terminal logs
spring.jpa.show-sql=true

## datasource
# spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/logs
# spring.datasource.url=jdbc:postgresql://localhost:5432/logs
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

log4j.logger.org.hibernate.SQL=DEBUG
log4j.logger.org.hibernate.type=TRACE


## server
## optional, but just in case another application is listening on your default  port (8080)
server.port=8036
server.servlet.contextPath=/logs/api

## hikari
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.validationTimeout=15000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.hikari.connectionTestQuery=SELECT 1
spring.datasource.hikari.connectionInitSql=SELECT 1
